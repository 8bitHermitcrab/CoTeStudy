# -*- coding: utf-8 -*-
"""하노이의 탑.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uQjQYSkEdUCPFeqeUPdPsDXcMPPH6WUM
"""

# def hanoi(n): # 홀수일때
#   if n==1:
#     return [[1,3]]
#   k=hanoi(n-1)
#   k.append([1,n%2+2])
#   for i in range(len(k)-1):
#     temp=[k[i][0]+(n%2*2-1),k[i][1]+(n%2*2-1)]    # 홀수번째엔 1->3으로 옮기고 짝수번째엔 1->2로 옮김
#     for j in range(2):
#       if temp[j]==4 or temp[j]==0:
#         temp[j]=abs(temp[j]-3)
#     k.append(temp)
#   return k    # 나름 재귀한건가...?

# def solution(n):
#     answer = []
#     for i in hanoi(n):
#       if n%2==0:    # 짝수면 2,3 자리 바꾸기
#         if i[0]>1:
#           i[0]=abs(i[0]-5)
#         if i[1]>1:
#           i[1]=abs(i[1]-5)
#       answer.append([i[0],i[1]])
#     return answer


def move_n_disk(n, i, f):
    if n==1: 
        return [[i, f]]
    print(move_n_disk(n-1, i, 6-i-f) + move_n_disk(1, i, f) + move_n_disk(n-1, 6-i-f, f))
    return move_n_disk(n-1, i, 6-i-f) + move_n_disk(1, i, f) + move_n_disk(n-1, 6-i-f, f)

def solution(n):
    answer = move_n_disk(n, 1, 3)
    return answer