# -*- coding: utf-8 -*-
"""N개의 최소공배수.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uQjQYSkEdUCPFeqeUPdPsDXcMPPH6WUM
"""

def solution(arr):
    answer = 1
    prime=[2]+[i for i in range(3,101,2)]
    for i in range(3,10,2):
        j=i
        while j*i<100:
            if j*i in prime:
                prime.remove(i*j)
            j+=2
    how_prime={i:0 for i in prime}
    for i in arr:
        a=i
        for j in prime:
            num=0
            while a>1 and a%j==0:
                a//=j
                # print(a,j)
                num+=1
            # print(i,j,num)
                if how_prime[j]<num:
                    how_prime[j]=num
    print(how_prime)
    for i,j in how_prime.items():
        if j>0:
            answer*=i**j

# 다른 사람 풀이
def gcd(a, b):
    while b > 0:
        a, b = b, a % b
    return a

def lcm(x, y):
    return x * y // gcd(x,y)

def solution(arr):
    if len(arr)==1:
        return arr[0]
    arr.sort()
    k = lcm(arr[0],arr[1])
    for i in range(2,len(arr)):
        k = lcm(k,arr[i])
    return k